---

- name: Create container config dirs
  tags:
    - configure
    - nova
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    state: "directory"
    setype: "container_file_t"
    owner: "{{ item.owner | default(ansible_user) }}"
    group: "{{ item.group | default(ansible_user) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - { "path": "{{ edpm_nova_config_dest }}", "mode": "0755" }
    - { "path": "/var/lib/openstack/config/containers", "mode": "0755" }
- name: Create persistent directories
  tags:
    - configure
    - nova
  become: true
  ansible.builtin.file:
    path: "{{ item.path }}"
    setype: "container_file_t"
    state: "directory"
    owner: "{{ item.owner | default(omit) }}"
    group: "{{ item.group | default(omit) }}"
    mode: "{{ item.mode | default(omit) }}"
  loop:
    - { "path": "/var/lib/nova", "mode": "0755" }
    - { "path": "/var/lib/_nova_secontext", "mode": "0755" }
    - { "path": "/var/lib/nova/instances", "mode", "0755" }
    - { "path": "/var/log/containers/nova", "mode": "0750" }
    - { "path": "/var/log/containers/stdouts" }
    - { "path": "/etc/ceph", "mode": "0750", "owner": "root", "group": "root" }
    - { "path": "/etc/multipath" }
    - { "path": "/etc/iscsi" }
    - { "path": "/var/lib/iscsi" }
    - { "path": "/run/openvswitch" }
- name: Render nova config files
  tags:
    - configure
    - nova
  ansible.builtin.template:
    src: "{{ item.src }}"
    dest: "{{ edpm_nova_config_dest }}/{{ item.dest }}"
    setype: "container_file_t"
    mode: "0644"
  loop:
    - { "src": "config.json.j2", "dest": "config.json" }
    - { "src": "nova-blank.conf", "dest": "nova-blank.conf" }
  notify:
    - Restart nova

- name: Discover configmaps in {{ edpm_nova_config_src }}
  ansible.builtin.find:
    paths: "{{ edpm_nova_config_src }}"
    file_type: file
    recurse: true
  register: edpm_nova_configmaps
  changed_when: false
  check_mode: false
  delegate_to: localhost

- name: Flatten configmaps into {{ edpm_nova_config_dest }}
  tags:
    - configure
    - nova
  ansible.builtin.copy:
    src: "{{ item.path }}"
    dest: "{{ edpm_nova_config_dest }}/{{ item.path | basename }}"
    setype: "container_file_t"
    mode: "0644"
  loop: "{{ edpm_nova_configmaps.files }}"
  notify:
    - Restart nova
