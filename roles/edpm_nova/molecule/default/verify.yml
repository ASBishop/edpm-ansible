---
# This is an example playbook to execute Ansible tests.

- name: Verify
  hosts: compute-1
  gather_facts: false
  vars:
    test_helper_dir: "../../../../molecule/test-helpers"
  tasks:
    - name: ensure expected directories exist
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_dir.yaml"
      loop:
        # common directories
        - "/etc/tmpfiles.d/"
        - "/var/lib/openstack"
        - "/var/lib/openstack/config/containers"
        - "/var/log/containers"
        - "/var/log/containers/stdouts"
        - "/etc/ssh/ssh_known_hosts"
        # extrenal deps
        - "/var/lib/openstack/config/ceph"
         # nova directories
        - "/var/lib/nova"
        - "/var/lib/openstack/config/nova"
        - "/var/lib/_nova_secontext"
        - "/var/lib/nova/instances"
        - "/var/log/containers/nova"
    - name: ensure systemd services are defined and functional
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_systemd_unit.yaml"
      loop:
        - { "name": "edpm_nova_compute.service" }
    - name: ensure podman container exists and are running
      ansible.builtin.include_tasks: "{{test_helper_dir}}/verify_podman.yaml"
      loop:
        - "nova_compute"
    - name: ensure kolla_set_configs copied the expected files
      become: true
      ansible.builtin.shell: |
        podman logs nova_compute 2>&1 | grep "{{item}}" > /dev/null
      loop:
        - "Copying /var/lib/kolla/config_files/nova-blank.conf to /etc/nova/nova.conf"
        - "Copying /var/lib/kolla/config_files/01-nova.conf to /etc/nova/nova.conf.d/01-nova.conf"
        - "Copying /var/lib/kolla/config_files/02-nova-log.conf to /etc/nova/nova.conf.d/02-nova-log.conf"
        - "Copying /var/lib/kolla/config_files/ssh-config to /var/lib/nova/.ssh/config"
        - "Copying /var/lib/kolla/config_files/ssh-privatekey to /var/lib/nova/.ssh/ssh-privatekey"

    - name: Check if user exists
      ansible.builtin.getent:
        database: passwd
        key: nova
      register: nova_user

    - name: Assert that nova user is created with kolla uid and gid
      ansible.builtin.assert:
        that:
          # user
          - "nova_user.ansible_facts.getent_passwd.nova[1] == '42436'"
          # group
          - "nova_user.ansible_facts.getent_passwd.nova[2] == '42436'"

    - name: Stat /home/nova/.ssh/authorized_keys
      become: true
      ansible.builtin.stat:
        path: /home/nova/.ssh/authorized_keys
      register: nova_authorized_keys

    - name: Assert that nova user has authorized_keys on the host
      ansible.builtin.assert:
        that:
          - "nova_authorized_keys.stat.mode == '0600'"
