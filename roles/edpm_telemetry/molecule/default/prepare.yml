---
# Copyright 2023 Red Hat, Inc.
# All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may
# not use this file except in compliance with the License. You may obtain
# a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations
# under the License.
- name: Prepare test_deps
  hosts: all
  roles:
    - role: ../../../../molecule/common/test_deps
      test_deps_extra_packages:
        - podman
- name: Prepare
  hosts: all
  roles:
    - role: osp.edpm.env_data
  vars_files:
    - ../../defaults/main.yml
  tasks:
    - name: Create config-data telemetry directory
      ansible.builtin.file:
        path: "{{ edpm_telemetry_config_src }}"
        state: directory
        mode: "0775"

    - name: Create ceilometer.conf
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/ceilometer.conf"
        mode: "0644"
        owner: root
        group: root
        content: |
          [DEFAULT]
          tenant_name_discovery=False
          debug=True
          log_dir=/var/log/ceilometer
          rpc_response_timeout=60
          polling_namespaces=compute

          [service_credentials]
          auth_type=password
          auth_url=http://keystone-internal.openstack.svc:5000
          project_name=service
          project_domain_name=Default
          username=ceilometer
          user_domain_name=Default

          [compute]
          instance_discovery_method=libvirt_metadata

          [coordination]
          backend_url=

          [publisher]
          telemetry_secret=eQ5qb0yysfJ8lx82Vl061vSyY

    - name: Create polling.yaml
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/polling.yaml"
        mode: "0644"
        owner: root
        group: root
        content: |
          ---
          sources:
              - name: some_pollsters
                interval: 300
                meters:
                  - cpu
                  - disk.*
                  - ip.*
                  - image.*
                  - memory
                  - memory.*
                  - network.*
                  - perf.*
                  - port
                  - port.*
                  - switch
                  - switch.*
                  - storage.*
                  - volume.*
                  - hardware.*

    - name: Create ceilometer_agent_compute.json
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/ceilometer_agent_compute.json"
        mode: "0644"
        owner: root
        group: root
        content: |
          {
            "image": "quay.io/podified-antelope-centos9/openstack-ceilometer-compute:current-podified",
            "user": "root",
            "restart": "always",
            "command": "kolla_start",
            "net": "host",
            "environment": {
                "KOLLA_CONFIG_STRATEGY":"COPY_ALWAYS",
                "OS_ENDPOINT_TYPE":"internal"
            },
            "volumes": [
                "/var/lib/openstack/config/ceilometer:/var/lib/openstack/config/:z",
                "/var/lib/openstack/config/ceilometer/ceilometer-agent-compute.json:/var/lib/kolla/config_files/config.json:z"
            ]
          }

    - name: Create ceilometer-agent-compute.json
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/ceilometer-agent-compute.json"
        mode: "0644"
        owner: root
        group: root
        content: |
          {
            "command": "/usr/bin/ceilometer-polling --polling-namespaces compute --logfile /dev/stdout",
            "config_files": [
              {
                "source": "/var/lib/openstack/config/ceilometer.conf",
                "dest": "/etc/ceilometer/ceilometer.conf",
                "owner": "ceilometer",
                "perm": "0600"
              },
              {
                "source": "/var/lib/openstack/config/polling.yaml",
                "dest": "/etc/ceilometer/polling.yaml",
                "owner": "ceilometer",
                "perm": "0600"
              }
            ]
          }

    - name: Create ceilometer_agent_ipmi.json
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/ceilometer_agent_ipmi.json"
        mode: "0644"
        owner: root
        group: root
        content: |
          {
            "image": "quay.io/podified-antelope-centos9/openstack-ceilometer-ipmi:current-podified",
            "user": "root",
            "restart": "always",
            "command": "kolla_start",
            "net": "host",
            "environment": {
                "KOLLA_CONFIG_STRATEGY":"COPY_ALWAYS",
                "OS_ENDPOINT_TYPE":"internal"
            },
            "volumes": [
                "/var/lib/openstack/config/ceilometer:/var/lib/openstack/config/:z",
                "/var/lib/openstack/config/ceilometer/ceilometer-agent-ipmi.json:/var/lib/kolla/config_files/config.json:z"
            ]
          }

    - name: Create ceilometer-agent-ipmi.json
      ansible.builtin.copy:
        dest: "{{ edpm_telemetry_config_src }}/ceilometer-agent-ipmi.json"
        mode: "0644"
        owner: root
        group: root
        content: |
          {
            "command": "/usr/bin/ceilometer-polling --polling-namespaces ipmi --logfile /dev/stdout",
            "config_files": [
              {
                "source": "/var/lib/openstack/config/ceilometer.conf",
                "dest": "/etc/ceilometer/ceilometer.conf",
                "owner": "ceilometer",
                "perm": "0600"
              },
              {
                "source": "/var/lib/openstack/config/polling.yaml",
                "dest": "/etc/ceilometer/polling.yaml",
                "owner": "ceilometer",
                "perm": "0600"
              }
            ]
          }

    - name: Create config-data logging directory
      ansible.builtin.file:
        path: "{{ edpm_logging_config_src }}"
        state: directory
        mode: "0775"

    - name: Install rsyslog
      ansible.builtin.dnf:
        name: rsyslog
        state: present

    - name: Restart rsyslog
      ansible.builtin.systemd:
        state: restarted
        name: rsyslog.service

    - name: Create ca-openshift.crt
      ansible.builtin.copy:
        dest: "{{ edpm_logging_config_src }}/ca-openshift.crt"
        mode: "0644"
        owner: root
        group: root
        content: |
          pseudo-certificate

    - name: Create 10-telemetry.conf
      ansible.builtin.copy:
        dest: "{{ edpm_logging_config_src }}/10-telemetry.conf"
        mode: "0644"
        owner: root
        group: root
        content: |
          action(type="omfwd" target="172.17.0.80" port="10514" protocol="tcp"
                      action.resumeRetryCount="100"
                      queue.type="linkedList" queue.size="10000"
                      StreamDriver="ossl"
                      StreamDriverMode="1"
                      StreamDriverAuthMode="x509/certvalid"
                      StreamDriver.CAFile="/etc/pki/rsyslog/ca-openshift.crt")

    - name: Create libvirt user
      command: groupadd libvirt
